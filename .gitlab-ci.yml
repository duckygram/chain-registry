include:
  - local: .gitlab/jobs.yaml
  
workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
    - if: $CI_COMMIT_TAG != null
      when: never 
    - when: always

stages:
  - Lint
  - Generate
  - Sentry
  - Extra

release template version:
  image: node:22.4.1-slim
  stage: Generate
  variables:
    SEMANTIC_RELEASE_CONFIG: |
      {
        "branches": [
          "$CI_DEFAULT_BRANCH"
        ],
        "plugins": [
          [
            "./semantic-release-plugin.mjs"
          ],
          [
            "@semantic-release/changelog",
            {
              "changelogFile": "./templates/CHANGELOG.md",
              "changelogTitle": "# Templates Change Log"
            }
          ],
          [
            "@semantic-release/git",
            {
              "assets": [
                "./templates/CHANGELOG.md"
              ],
              "message": "chore(release): <%= nextRelease.version %> [skip ci]"
            }
          ]
        ]
      }
    GIT_AUTHOR_NAME: Semantic Release Bot
    GIT_COMMITTER_NAME: Semantic Release Bot
    GIT_COMMITTER_EMAIL: semantic-release-bot@devlab.co
    GIT_AUTHOR_EMAIL: semantic-release-bot@devlab.co
  before_script:
    - apt-get update && apt-get install -y --no-install-recommends git-core ca-certificates
    - npm i
    - printf '%s' "$SEMANTIC_RELEASE_CONFIG" > .releaserc.json
  script:
    - cat .releaserc.json
    - npx semantic-release
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
      changes:
        - templates/**/*
      when: always
    - when: never

generate-pipelines:
  extends: .generate-pipelines
  stage: Generate

remove-dev-stale-locks:
  image: $CONTAINER_REGISTRY_HOST/base/tools/deploy-toolbox-root:$DEPLOY_TOOLBOX_VERSION
  stage: Generate
  script:
    - bin/clean-stale-tf-locks.sh --lock-table-name our-own-platform-deploy-development-tf-state-lock
  tags:
    - development-cluster

trigger:
  stage: Generate
  needs:
    - generate-pipelines
  trigger:
    include:
      - artifact: .gitlab/generated.yaml
        job: generate-pipelines
    strategy: depend

.sentry:
  stage: Sentry
  image: $CONTAINER_REGISTRY_HOST/base/tools/deploy-toolbox-root:$DEPLOY_TOOLBOX_VERSION
  before_script:
    - cd stacks/sentry/$SENTRY_STACK
    - terraform init -input=false

sentry dev preview:
  extends: .sentry
  needs: []
  variables:
    SENTRY_STACK: development
  rules:
    - if: $CI_COMMIT_REF_NAME != $CI_DEFAULT_BRANCH
      changes:
        paths:
          - stacks/sentry/$SENTRY_STACK/*
          - stacks/sentry/modules/**/*
          - stacks/sentry/projects.yaml
        compare_to: 'refs/heads/main'
  script:
    - terraform plan -input=false
  tags:
    - development-cluster

sentry dev apply preview:
  extends: .sentry
  needs: []
  variables:
    SENTRY_STACK: development
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
      changes:
        paths:
          - stacks/sentry/$SENTRY_STACK/*
          - stacks/sentry/modules/**/*
          - stacks/sentry/projects.yaml
  script:
    - terraform plan -input=false
  tags:
    - development-cluster
      
sentry dev apply:
  extends: sentry dev apply preview
  needs:
    - sentry dev apply preview
  when: manual
  script:
    - terraform apply -auto-approve -input=false
  tags:
    - development-cluster

sentry prod preview:
  extends: .sentry
  needs: []
  variables:
    SENTRY_STACK: production
  rules:
    - if: $CI_COMMIT_REF_NAME != $CI_DEFAULT_BRANCH
      changes:
        paths:
          - stacks/sentry/$SENTRY_STACK/*
          - stacks/sentry/modules/**/*
          - stacks/sentry/projects.yaml
        compare_to: 'refs/heads/main'
  script:
    - terraform plan -input=false
  tags:
    - production-cluster

sentry prod apply preview:
  extends: .sentry
  needs: []
  variables:
    SENTRY_STACK: production
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
      changes:
        paths:
          - stacks/sentry/$SENTRY_STACK/*
          - stacks/sentry/modules/**/*
          - stacks/sentry/projects.yaml
  script:
    - terraform plan -input=false
  tags:
    - production-cluster

sentry prod apply:
  extends: sentry prod apply preview
  needs:
    - sentry prod apply preview
  when: manual
  script:
    - terraform apply -auto-approve -input=false
  tags:
    - production-cluster

.e2e-access:
  stage: Extra
  image: $CONTAINER_REGISTRY_HOST/base/tools/deploy-toolbox-root:$DEPLOY_TOOLBOX_VERSION
  before_script:
    - cd stacks/e2e-access
    - terraform init -input=false

E2E access preview:
  extends: .e2e-access
  needs: []
  rules:
    - if: $CI_COMMIT_REF_NAME != $CI_DEFAULT_BRANCH
      changes:
        paths:
          - stacks/e2e-access/**/*
        compare_to: 'refs/heads/main'
  script:
    - terraform plan -input=false
  tags:
    - development-cluster

E2E access apply:
  extends: .e2e-access
  needs: []
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
      changes:
        paths:
          - stacks/e2e-access/**/*
  script:
    - terraform apply -input=false -auto-approve
  tags:
    - development-cluster
